## 병사 배치하기
"""
// problem
N명의 병사가 무작위로 나열되어 있다. 각 병사는 특정한 값의 전투력을 보유하고 있으며,
병사를 배치할 때는 전투력이 높은 병사가 앞쪽에 오도록 내림차순으로 배치를 하고자 한다.
또한 배치 과정에서는 특정한 위치에 있는 병사를 열외시키는 방법을 이용한다. 그러면서도 남아있는 병사의 수가 최대가 되도록 하고 싶다.
병사에 대한 정보가 주어졌을 때,
남아있는 병사의 수가 최대가 되도록 하기 위해서 열외해야 하는 병사의 수를 출력하는 프로그램을 작성하시오
// input
첫째 줄에 N이 주어진다. (1 ≤ N ≤ 2,000)
둘째 줄에 각 병사의 전투력이 공백을 기준으로 구분되어 차례대로 주어진다.
각 병사의 전투력은 10,000,000보다 작거나 같은 자연수이다.
// output
첫째 줄에 남아있는 병사의 수가 최대가 되도록 하기 위해서 열외해야 하는 병사의 수를 출력한다.
"""
# study, 풀지 못함
n = int(input())
array = list(map(int, input().split()))
# 순서를 뒤집어 '최장 증가 부분 수열' 문제로 변환
array.reverse()

# 다이나믹 프로그래밍을 위한 1차원 DP 테이블 초기화
dp = [1] * n

# 가장 긴 증가하는 부분 수열(LIS) 알고리즘 수행
for i in range(1, n):
    for j in range(0, i):
        if array[j] < array[i]:
            dp[i] = max(dp[i], dp[j] + 1)

# 열외해야 하는 병사의 최소 수를 출력
print(n - max(dp))
# O(n2)
"""
// learn
LIS 유형의 문제다.
dp[i] = array[i]를 마지막 원소로 가지는 부분 수열의 최대 길이이다.
"""